name: Build APK - Facial Recognition System

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Build Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jdk unzip build-essential libstdc++6 aidl \
                                  autoconf automake libtool pkg-config cmake
          python -m pip install --upgrade pip
          python -m pip install cython==0.29.21 buildozer==1.5.0 opencv-python-headless face_recognition
          
      - name: Set up Android SDK and NDK
        run: |
          echo "sdk.dir=$HOME/android-sdk" > local.properties
          mkdir -p $HOME/android-sdk/cmdline-tools/latest
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip -d $HOME/android-sdk/cmdline-tools/latest
          mv $HOME/android-sdk/cmdline-tools/latest/cmdline-tools/* $HOME/android-sdk/cmdline-tools/latest/
          rmdir $HOME/android-sdk/cmdline-tools/latest/cmdline-tools
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=$HOME/android-sdk \
          "platform-tools" \
          "platforms;android-31" \
          "build-tools;30.0.3" \
          "extras;android;m2repository" \
          "ndk;25.2.9519653"
          
      - name: Set Environment Variables
        run: |
          echo "PACKAGES_PATH=/home/runner/.buildozer/android/packages" >> $GITHUB_ENV
          echo "ANDROIDSDK=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROIDNDK=$HOME/android-sdk/ndk/25.2.9519653" >> $GITHUB_ENV
          echo "ANDROIDAPI=31" >> $GITHUB_ENV
          echo "ANDROIDMINAPI=21" >> $GITHUB_ENV
      - name: Add Buildozer and Android SDK to PATH
        run: |
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
          echo "$HOME/android-sdk/ndk/25.2.9519653" >> $GITHUB_PATH
      - name: Initialize Buildozer
        run: |
          if [ ! -f "buildozer.spec" ]; then
            buildozer init
          fi
      - name: Modify buildozer.spec for Facial Recognition
        run: |
          sed -i 's/^# \(android.permissions = INTERNET\)/\1/' buildozer.spec
          sed -i 's/^# \(android.permissions = CAMERA\)/\1/' buildozer.spec
          sed -i 's/^# \(android.permissions = WRITE_EXTERNAL_STORAGE\)/\1/' buildozer.spec
          sed -i 's/^# \(android.api =\).*/\1 31/' buildozer.spec
          sed -i 's/^# \(android.minapi =\).*/\1 21/' buildozer.spec
          sed -i 's/^# \(requirements = python3\)/\1,kivy,opencv-python,face_recognition/' buildozer.spec
          echo "p4a.bootstrap = sdl2" >> buildozer.spec
          echo "Contents of buildozer.spec:"
          cat buildozer.spec
      - name: Clean Buildozer
        run: |
          echo "Cleaning build with Buildozer."
          buildozer -v android clean || { echo "Clean failed. Exiting."; exit 1; }
      - name: Build APK
        run: |
          mkdir -p logs
          echo "Building APK with Buildozer."
          buildozer -v android debug --log_level 2 > logs/buildozer_log.txt || { echo "Build failed. Exiting."; cat logs/buildozer_log.txt; exit 1; }
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: facial_recognition_apk
          path: ./bin/*.apk

      - name: Upload Logs
        uses: actions/upload-artifact@v4
        with:
          name: build_logs
          path: logs/buildozer_log.txt
