name: Build APK

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jdk unzip build-essential libstdc++6 aidl
          sudo apt install -y build-essential libltdl-dev libffi-dev libssl-dev python3-dev zip
          sudo apt install -y autoconf automake libtool
          
          python -m pip install --upgrade pip
          python -m pip install cython==0.29.21
          python -m pip install sh==1.14.3
          python -m pip install --upgrade buildozer
          python -m pip install python-for-android

      - name: Check for Installed Dependencies
        run: |
          python -m pip show cython
          python -m pip show python-for-android
          python -m pip show buildozer

      - name: Check for Installed Python-for-Android
        run: |
          python -m pip show python-for-android || { echo "python-for-android not installed!"; exit 1; }

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Set up Android SDK and NDK
        run: |
          echo "sdk.dir=$HOME/android-sdk" > local.properties
          mkdir -p $HOME/android-sdk/cmdline-tools/latest
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip -d $HOME/android-sdk/cmdline-tools/latest
          mv $HOME/android-sdk/cmdline-tools/latest/cmdline-tools/* $HOME/android-sdk/cmdline-tools/latest/
          rmdir $HOME/android-sdk/cmdline-tools/latest/cmdline-tools
          
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=$HOME/android-sdk \
          "platform-tools" \
          "platforms;android-31" \
          "build-tools;30.0.3" \
          "extras;android;m2repository" \
          "tools" \
          "ndk;25.2.9519653"

      - name: Add Buildozer and Android SDK to PATH
        run: |
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
          echo "$HOME/android-sdk/ndk/25.2.9519653" >> $GITHUB_PATH

      - name: Copy aidl binary to Build Tools
        run: |
          sudo cp /usr/bin/aidl $HOME/android-sdk/build-tools/30.0.3/
          sudo chmod -R 777 $HOME/android-sdk/build-tools/30.0.3/

      - name: Create buildozer.spec if not exists
        run: |
          if [ ! -f "buildozer.spec" ]; then
            buildozer init
            sed -i 's/^android.sdk_path =.*/android.sdk_path = \/home\/runner\/android-sdk/' buildozer.spec
            sed -i 's/^android.ndk_path =.*/android.ndk_path = \/home\/runner\/android-sdk\/ndk\/25.2.9519653/' buildozer.spec
          fi

      - name: Clean Buildozer
        run: |
          buildozer android clean

      - name: Debug: Check for Python-for-Android Directory
        run: |
          ls -la ~/.buildozer/android/platform/

      - name: Build APK
        run: |
          mkdir -p logs
          buildozer -v android debug --log_level 3 > logs/buildozer_log.txt

      - name: Upload APK as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: ./bin/*.apk

      - name: Store Buildozer Logs
        uses: actions/upload-artifact@v4
        with:
          name: buildozer_logs
          path: logs/buildozer_log.txt
