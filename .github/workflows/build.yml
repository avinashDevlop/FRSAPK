name: Build Kivy APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python 3.8
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      # Step 3: Install system dependencies and Buildozer
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libssl-dev libffi-dev python3-dev python3-setuptools python3-venv git zip unzip
          python3 -m pip install --upgrade pip virtualenv
          python3 -m pip install buildozer cython==0.29.36

      # Step 4: Install Android SDK, NDK, and Build Tools
      - name: Install Android SDK, NDK, and Build Tools
        run: |
          sudo apt-get install -y openjdk-11-jdk
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          mkdir -p $HOME/android-sdk/cmdline-tools/latest
          unzip -q commandlinetools-linux-9477386_latest.zip -d $HOME/android-sdk/cmdline-tools/latest
          
          # Set up Android SDK
          echo "export ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_ENV
          
          # Accept licenses and install required Android SDK components
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses
          $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --install "platform-tools" "platforms;android-31" "build-tools;31.0.0" "ndk;25.2.9519653"

      # Step 5: Create a virtual environment, install Python dependencies, and build the APK
      - name: Build APK with Buildozer
        run: |
          virtualenv venv
          source venv/bin/activate
          pip install -r requirements.txt
          buildozer -v android debug > build_logs.txt 2>&1 || { cat build_logs.txt; exit 1; }
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          ANDROID_NDK_HOME: $HOME/android-sdk/ndk/25.2.9519653
          JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64

      # Step 6: Upload the generated APK as a build artifact
      - name: Upload APK as artifact
        uses: actions/upload-artifact@v3
        with:
          name: FRS-APK
          path: |
            ./bin/*.apk  # Adjust the path if your APK is generated elsewhere
